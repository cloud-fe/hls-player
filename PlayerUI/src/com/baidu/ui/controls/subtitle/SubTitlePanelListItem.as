package com.baidu.ui.controls.subtitle {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.external.ExternalInterface;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.utils.clearInterval;	import flash.utils.setInterval;		import transitions.Tweener;

	public class SubTitlePanelListItem extends MovieClip {		public var id:String;		public var groudId:int;		public var url:String;		public function SubTitlePanelListItem(tid:String,gid:int,turl:String,tname:String,tfrom:String,											  tx:int=0,ty:int=0,isSelected:Boolean=false) {			id = tid;			groudId = gid;			url = turl;			txtTitle.text = tname || "default";			txtFrom.text = tfrom || "default";												txtTitle.textColor = 0xD5D5D5;			txtFrom.textColor = 0xD5D5D5;			this.x = tx;			this.y = ty;			mcCurBar.visible = isSelected;			mcBgBar.visible = false;			this.addEventListener(MouseEvent.ROLL_OVER,onMouseOverEvent);			this.addEventListener(MouseEvent.ROLL_OUT,onMouseOutEvent);			this.addEventListener(MouseEvent.CLICK,onMouseClickEvent);						if (mcCurBar.visible) {				mcCurBar.alpha = 0;				mcCurBar.scaleX = 0.1;				mcCurBar.scaleY = 0.1;				Tweener.addTween(mcCurBar,{alpha:1,scaleX:1,scaleY:1,time:0.5});				Tweener.addTween(mcCurBgBar,{alpha:0,time:0.5});				txtTitle.textColor = 0x0088f9;				txtFrom.textColor = 0x0088f9;			}		}		public function selectItem(tid:String):void {			mcCurBar.visible = (id == tid);			if (mcCurBar.visible) {				mcCurBar.alpha = 0;				mcCurBar.scaleX = 0.1;				mcCurBar.scaleY = 0.1;				Tweener.addTween(mcCurBar,{alpha:1,scaleX:1,scaleY:1,time:0.5});				Tweener.addTween(mcCurBgBar,{alpha:0,time:0.5});				txtTitle.textColor = 0x0088f9;				txtFrom.textColor = 0x0088f9;			}else{				txtTitle.textColor = 0xD5D5D5;				txtFrom.textColor = 0xD5D5D5;				Tweener.addTween(mcCurBgBar,{alpha:1,time:0.5});			}		}		public function showGroup(gId:int):void {			this.visible = groudId == gId;		}				public function animateTxt(num:Number):Boolean {			if (num > txtTitle.maxScrollH) {				return false;			}			txtTitle.scrollH = num;			return true;		}		private var intervalId:int = 0;		public function startAnimateTxt():void {						clearInterval(intervalId);			if (txtTitle.maxScrollH <= 0) {				return;			}			var startScrollLeft:int = 0;			intervalId = setInterval(function():void {				startScrollLeft = startScrollLeft + 3;				if (!animateTxt(startScrollLeft)) {					clearInterval(intervalId);				}			}, 60);		}				public function closeAnimateTxt():void {			clearInterval(intervalId);			animateTxt(0);		}				private function onMouseClickEvent(e:MouseEvent):void {			dispatchEvent(new Event(SubTitlePanel.CHOOSE));		}		private function onMouseOverEvent(e:MouseEvent):void {			startAnimateTxt();			mcBgBar.visible = true;		}		private function onMouseOutEvent(e:MouseEvent):void {			closeAnimateTxt();			mcBgBar.visible = false;		}	}}